# -------- base for caching deps (prod-only) --------
FROM node:20-alpine AS deps
WORKDIR /app
COPY package.json package-lock.json ./
RUN npm ci --omit=dev

# -------- build stage (full deps, no build needed for JS) --------
FROM node:20-alpine AS build
WORKDIR /app
COPY package.json package-lock.json ./
RUN npm ci
COPY . .
# No build step needed for JavaScript project

# -------- production runner --------
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production

# tiny init and any runtime OS tools you truly need
RUN apk add --no-cache tini ffmpeg

# copy runtime deps and source code
COPY --from=deps /app/node_modules ./node_modules
COPY --from=build /app/src ./src
COPY package.json ./

# Create data directory with proper permissions before switching to node user
RUN mkdir -p /app/data/project_stats && chown -R node:node /app/data

# security: don't run as root
USER node

EXPOSE 8080

# simple healthcheck; expects GET /healthz => 200
HEALTHCHECK --interval=30s --timeout=2s --retries=3 \
  CMD node -e "require('http').get({host:'127.0.0.1',port:8080,path:'/healthz'},r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))"

ENTRYPOINT ["/sbin/tini","--"]
CMD ["node", "src/server.js"]
