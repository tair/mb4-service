{
  "info": {
    "_postman_id": "publishing-workflow-tests",
    "name": "MorphoBank Publishing Workflow Tests",
    "description": "Complete test suite for the publishing workflow including project creation, authentication, preferences, and publishing with edge cases",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.globals.set('authToken', jsonData.token);",
                  "    pm.globals.set('userId', jsonData.user.user_id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"{{userPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login as Curator",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Curator login successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.globals.set('curatorToken', jsonData.token);",
                  "    pm.globals.set('curatorUserId', jsonData.user.user_id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{curatorEmail}}\",\n  \"password\": \"{{curatorPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Project Setup",
      "item": [
        {
          "name": "Create Test Project - Incomplete Citation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Project created successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('project_id');",
                  "    pm.globals.set('incompleteProjectId', jsonData.project_id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Project - Incomplete Citation\",\n  \"description\": \"A test project with incomplete citation information\",\n  \"nsf_funded\": 0,\n  \"publication_status\": 0,\n  \"journal_title\": \"Test Journal\",\n  \"article_authors\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/create",
              "host": ["{{baseUrl}}"],
              "path": ["projects", "create"]
            }
          }
        },
        {
          "name": "Create Test Project - Complete Citation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Project created successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('project_id');",
                  "    pm.globals.set('completeProjectId', jsonData.project_id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Project - Complete Citation\",\n  \"description\": \"A test project with complete citation information ready for publishing\",\n  \"nsf_funded\": 1,\n  \"publication_status\": 0,\n  \"journal_title\": \"Nature\",\n  \"article_authors\": \"Jane Smith, John Doe\",\n  \"article_title\": \"Revolutionary Morphological Analysis\",\n  \"journal_year\": \"2024\",\n  \"journal_volume\": \"625\",\n  \"journal_number\": \"7995\",\n  \"journal_url\": \"https://doi.org/10.1038/s41586-024-12345-6\",\n  \"article_pp\": \"123-130\",\n  \"article_doi\": \"10.1038/s41586-024-12345-6\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/create",
              "host": ["{{baseUrl}}"],
              "path": ["projects", "create"]
            }
          }
        },
        {
          "name": "Create Project - In Press Article",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"In Press project created successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('project_id');",
                  "    pm.globals.set('inPressProjectId', jsonData.project_id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Project - In Press\",\n  \"description\": \"A test project with in press article\",\n  \"nsf_funded\": 0,\n  \"publication_status\": 1,\n  \"journal_title\": \"Journal of Morphology\",\n  \"article_authors\": \"Dr. Research Smith\",\n  \"article_title\": \"Advanced Morphological Studies\",\n  \"journal_year\": \"2024\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/create",
              "host": ["{{baseUrl}}"],
              "path": ["projects", "create"]
            }
          }
        }
      ]
    },
    {
      "name": "Publishing Status & Info Checks",
      "item": [
        {
          "name": "Check Publishing Status - Complete Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status check successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('published');",
                  "    pm.expect(jsonData).to.have.property('citation_complete');",
                  "    pm.expect(jsonData.citation_complete).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/status",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "status"
              ]
            }
          }
        },
        {
          "name": "Check Publishing Status - Incomplete Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status check shows incomplete citation\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('citation_complete');",
                  "    pm.expect(jsonData.citation_complete).to.be.false;",
                  "    pm.expect(jsonData).to.have.property('citation_message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{incompleteProjectId}}/publishing/status",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{incompleteProjectId}}",
                "publishing",
                "status"
              ]
            }
          }
        },
        {
          "name": "Info Redirect - Incomplete Citation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should redirect due to incomplete citation\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('redirect');",
                  "    pm.expect(jsonData.redirect).to.be.true;",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{incompleteProjectId}}/publishing/info-redirect",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{incompleteProjectId}}",
                "publishing",
                "info-redirect"
              ]
            }
          }
        },
        {
          "name": "Info Redirect - Complete Citation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should not redirect with complete citation\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('redirect');",
                  "    pm.expect(jsonData.redirect).to.be.false;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/info-redirect",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "info-redirect"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Publishing Preferences",
      "item": [
        {
          "name": "Get Publishing Preferences - Incomplete Citation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should redirect due to incomplete citation\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('redirect');",
                  "    pm.expect(jsonData.redirect).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{incompleteProjectId}}/publishing/preferences",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{incompleteProjectId}}",
                "publishing",
                "preferences"
              ]
            }
          }
        },
        {
          "name": "Get Publishing Preferences - Complete Citation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should return publishing preferences\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('publishingFields');",
                  "    pm.expect(jsonData.publishingFields).to.have.property('project_id');",
                  "    pm.expect(jsonData.publishingFields).to.have.property('publish_cc0');",
                  "    pm.expect(jsonData.publishingFields).to.have.property('nsf_funded');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/preferences",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "preferences"
              ]
            }
          }
        },
        {
          "name": "Save Publishing Preferences - Standard Settings",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Preferences saved successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('saved successfully');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"publish_cc0\": 1,\n  \"nsf_funded\": 1,\n  \"extinct_taxa_identified\": 0,\n  \"publish_character_comments\": 1,\n  \"publish_cell_comments\": 1,\n  \"publish_change_logs\": 1,\n  \"publish_cell_notes\": 1,\n  \"publish_character_notes\": 1,\n  \"publish_media_notes\": 1,\n  \"publish_matrix_media_only\": 0,\n  \"publish_inactive_members\": 1,\n  \"no_personal_identifiable_info\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/preferences",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "preferences"
              ]
            }
          }
        },
        {
          "name": "Save Publishing Preferences - Matrix Media Only",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Matrix media only preferences saved\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('saved successfully');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"publish_cc0\": 1,\n  \"nsf_funded\": 1,\n  \"extinct_taxa_identified\": 1,\n  \"publish_character_comments\": 1,\n  \"publish_cell_comments\": 1,\n  \"publish_change_logs\": 1,\n  \"publish_cell_notes\": 1,\n  \"publish_character_notes\": 1,\n  \"publish_media_notes\": 1,\n  \"publish_matrix_media_only\": 1,\n  \"publish_inactive_members\": 0,\n  \"no_personal_identifiable_info\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{inPressProjectId}}/publishing/preferences",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{inPressProjectId}}",
                "publishing",
                "preferences"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Permission Tests",
      "item": [
        {
          "name": "Unauthorized Access - No Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should require authentication\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/status",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "status"
              ]
            }
          }
        },
        {
          "name": "Unauthorized Project Access",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should deny access to unauthorized project\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{curatorToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/preferences",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "preferences"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Publishing Form & Media Validation",
      "item": [
        {
          "name": "Get Publish Form - No Media Warning",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should show no media warning or be ready\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('canPublish');",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    // Either no media warning or ready to publish",
                  "    if (!jsonData.canPublish) {",
                  "        pm.expect(jsonData.warning).to.be.oneOf(['no_media', 'media_warnings']);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/form",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "form"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Publishing Tests",
      "item": [
        {
          "name": "Publish Project - Incomplete Citation (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should fail due to incomplete citation\", function () {",
                  "    // This might succeed if media validation passes first",
                  "    // The actual validation order depends on implementation",
                  "    pm.response.to.have.status.oneOf([400, 500]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{incompleteProjectId}}/publishing/publish",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{incompleteProjectId}}",
                "publishing",
                "publish"
              ]
            }
          }
        },
        {
          "name": "Publish Project - Complete Citation (Might Fail on Media)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Response indicates publishing attempt\", function () {",
                  "    // Could succeed or fail based on media validation",
                  "    pm.response.to.have.status.oneOf([200, 400]);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    ",
                  "    if (pm.response.code === 200) {",
                  "        pm.expect(jsonData.message).to.include('published successfully');",
                  "        pm.globals.set('publishedProjectId', pm.globals.get('completeProjectId'));",
                  "    } else {",
                  "        // Likely media validation issues",
                  "        pm.expect(jsonData.message).to.be.a('string');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/publish",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "publish"
              ]
            }
          }
        },
        {
          "name": "Curator Publish - Bypass Media Validation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Curator can bypass media validation\", function () {",
                  "    // Curator should be able to publish despite media issues",
                  "    pm.response.to.have.status.oneOf([200, 400, 403]);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    ",
                  "    if (pm.response.code === 200) {",
                  "        pm.expect(jsonData.message).to.include('published successfully');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{curatorToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{inPressProjectId}}/publishing/publish",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{inPressProjectId}}",
                "publishing",
                "publish"
              ]
            }
          }
        },
        {
          "name": "Attempt Republish - Should Fail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should prevent republishing\", function () {",
                  "    pm.response.to.have.status(400);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('already published');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{publishedProjectId}}/publishing/publish",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{publishedProjectId}}",
                "publishing",
                "publish"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Post-Publishing Validation",
      "item": [
        {
          "name": "Verify Published Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Project is now published\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.published).to.equal(1);",
                  "    pm.expect(jsonData).to.have.property('published_on');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/{{publishedProjectId}}/publishing/status",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{publishedProjectId}}",
                "publishing",
                "status"
              ]
            }
          }
        },
        {
          "name": "Published Project Preferences - Should Require Curator",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should restrict editing published project\", function () {",
                  "    pm.response.to.have.status(403);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('published');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"publish_cc0\": 0\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{publishedProjectId}}/publishing/preferences",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{publishedProjectId}}",
                "publishing",
                "preferences"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Edge Cases",
      "item": [
        {
          "name": "Invalid Project ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should handle invalid project ID\", function () {",
                  "    pm.response.to.have.status(404);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('not found');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/99999/publishing/status",
              "host": ["{{baseUrl}}"],
              "path": ["projects", "99999", "publishing", "status"]
            }
          }
        },
        {
          "name": "Invalid Publishing Preferences Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should handle invalid data gracefully\", function () {",
                  "    // Depending on validation, could be 400 or 500",
                  "    pm.response.to.have.status.oneOf([400, 500]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"invalid_field\": \"invalid_value\",\n  \"publish_cc0\": \"not_a_number\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/preferences",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "preferences"
              ]
            }
          }
        },
        {
          "name": "Malformed JSON",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should handle malformed JSON\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \"invalid\": json, }"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/{{completeProjectId}}/publishing/preferences",
              "host": ["{{baseUrl}}"],
              "path": [
                "projects",
                "{{completeProjectId}}",
                "publishing",
                "preferences"
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "userEmail",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "userPassword",
      "value": "testpassword",
      "type": "string"
    },
    {
      "key": "curatorEmail",
      "value": "curator@example.com",
      "type": "string"
    },
    {
      "key": "curatorPassword",
      "value": "curatorpassword",
      "type": "string"
    }
  ]
}
